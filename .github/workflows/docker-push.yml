name: Docker push

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.VALUE }}
    # env:
    #   IMAGE_NAME: nju33/gitpod-workspace
    steps:
      # - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}

      - name: Set version
        run: echo "::set-output name=VALUE::${GITHUB_REF#refs/tags/v}"
        id: version

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "nju33"
          password: ${{ secrets.DOCKER_TOKEN }}
      # - name: Login to Dockerhub
      #   run: echo "$DOCKER_TOKEN" | docker login --username nju33 --password-stdin
      #   env:
      #     DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: "nju33/gitpod-workspace:${{ steps.version.outputs.VALUE }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new
      # - run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      # - name: Build the Dockerfile
      #   run: docker build -t "$IMAGE_NAME" .
      # - run: |
      #     docker image tag "$IMAGE_NAME" "$IMAGE_NAME:$VERSION"
      #     docker image push "$IMAGE_NAME:$VERSION"
      #   env:
      #     VERSION: ${{ steps.version.outputs.VALUE }}

  dispatch:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: |
          curl -i -XPOST \
            -H "Authorization: Bearer $TOKEN" \
            "$REPOSITORY_DISPATCH_DELEGATION" \
            -d "{\"event_type\":\"updated_docker_image\",\"client_payload\":{\"image\":\"$VERSION\"}}"
        env:
          REPOSITORY_DISPATCH_DELEGATION: ${{ secrets.REPOSITORY_DISPATCH_DELEGATION }}
          TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          VERSION: ${{ needs.build.outputs.VERSION }}
